syntax = "proto3";
package proto;
option go_package = "github.com/amjadjibon/dkv/proto;proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

message KeyValueStore {
  string key = 1;
  bytes value = 2;
}

message KVGetRequest {
  string key = 1;
}

message KVGetResponse {
  bytes value = 1;
}

message KVPutRequest {
  string key = 1;
  bytes value = 2;
}

message KVDeleteRequest {
  string key = 1;
}

message RaftJoinRequest {
  string node_id = 1;
  string node_address = 2;
}

message RaftLeaveRequest {
  string node_id = 1;
}

message RaftStatusRequest {
}

message RaftStatusResponse {
  string leader_id = 1;
  string leader_address = 2;
  string term = 3;
  repeated string follower_ids = 4;
  repeated string follower_addresses = 5;
}

service DKV {
  rpc KVGet(KVGetRequest) returns (KVGetResponse) {
    option (google.api.http) = {
      post: "/get"
      body: "*"
    };
  }
  rpc KVPut(KVPutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/put"
      body: "*"
    };
  }
  rpc KVDelete(KVDeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/delete"
      body: "*"
    };
  }

  rpc RaftJoin(RaftJoinRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/raft/join"
      body: "*"
    };
  }

  rpc RaftLeave(RaftLeaveRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/raft/leave"
      body: "*"
    };
  }

  rpc RaftStatus(RaftStatusRequest) returns (RaftStatusResponse) {
    option (google.api.http) = {
      get: "/raft/status"
    };
  }
}
